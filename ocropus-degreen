#!/usr/bin/env python

from __future__ import print_function

import ocrolib
import cv2
import numpy as np
import argparse

parser = argparse.ArgumentParser("""
Degreen Zulassungsschein
""")

parser.add_argument('--debug', type=float, default=0, help='display intermediate results, default: %(default)s')
parser.add_argument('-o', '--output', default=None, help="output file")
parser.add_argument('files', nargs='+')
args = parser.parse_args()

args.files = ocrolib.glob_all(args.files)

if len(args.files)<1:
    parser.print_help()
    sys.exit(0)


################################################################
### Helper functions
################################################################

def print_info(*objs):
    print("INFO: ") #, *objs, file=sys.stdout)

def print_error(*objs):
    print("ERROR: ", *objs, file=sys.stderr)

def dshow(img):
    if args.debug > 0:
        cv2.imshow('dshow', img)
        cv2.waitKey(0)
        cv2.destroyAllWindows()

################################################################
### Processing functions
################################################################

def blankHsv(hsv, mask):
    hsv[mask == 255] = [0, 0, 255]

def processHsv(imgFile):
    # Convert BGR to HSV
    bgr = cv2.imread(imgFile, cv2.IMREAD_COLOR)
    hsv = cv2.cvtColor(bgr, cv2.COLOR_BGR2HSV)

    # Remove brightest areas (background)
    lowerValue = np.array([0,0,210])
    upperValue = np.array([180,255,255])

    # Produces grey-scale image where each pixel is either 0 or 255
    mask = cv2.inRange(hsv, lowerValue, upperValue)

    blankHsv(hsv, mask)

    # Remove green hues of a certain saturation
    lowerHue = np.array([23,64,0])
    upperHue = np.array([65,255,255])
    mask = cv2.inRange(hsv, lowerHue, upperHue)
    blankHsv(hsv, mask)

    bgrOut = cv2.cvtColor(hsv, cv2.COLOR_HSV2BGR)

    dshow(bgrOut)

################################################################
### Main
################################################################

if args.debug > 0: args.parallel = 0

for f in args.files:
    processHsv(f)
